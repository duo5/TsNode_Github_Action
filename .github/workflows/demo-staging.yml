name: Demo ci/cd

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
#   schedule:
#     - cron: '0 12 * * *'
jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      
      # Setup Node
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.1.2
      with:
        node-version: 15
      
      # Install dependencies
    - name: Install dependencies
      run: npm install
    
    # Cache node modules
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
      
      # Build and gen api document
    - name: Build
      run: npm run build:staging
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./docker/staging.dockerfile
        push: true
        tags: duonghx98/demo-app:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
    
    - name: Run app
      uses: JimCronqvist/action-ssh@master
      with:
        hosts: ${{ secrets.USERNAME }}@${{ secrets.HOST }}
        privateKey: ${{ secrets.KEY }}
        command: ./restart-service.sh
